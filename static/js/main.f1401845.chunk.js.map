{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","data01","name","value","data02","StyledTreeExample","label","generate","a","input","document","getElementById","html2canvas","logging","background","allowTaint","taintTest","useCORS","height","scrollHeight","width","scrollWidth","async","then","canvas","contentWidth","contentHeight","console","log","pageHeight","leftHeight","position","imgWidth","imgHeight","pageData","toDataURL","pdf","jsPDF","addImage","addPage","save","pdfExportComponent","React","useRef","className","onClick","current","paperSize","fileName","title","subject","keywords","ref","id","style","PieChart","Pie","data","dataKey","cx","cy","outerRadius","fill","innerRadius","crossorigin","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f1401845.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\nimport {\n  Text,\n  Font,\n  Page,\n  View,\n  Image,\n  Document,\n  StyleSheet,\n  PDFDownloadLink\n} from '@react-pdf/renderer';\n\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\n\nimport { PDFExport, savePDF } from '@progress/kendo-react-pdf';\n\nfunction App() {\n  const data01 = [\n    { name: 'Group A', value: 400 },\n    { name: 'Group B', value: 300 },\n    { name: 'Group C', value: 300 },\n    { name: 'Group D', value: 200 },\n  ];\n  const data02 = [\n    { name: 'A1', value: 100 },\n    { name: 'A2', value: 300 },\n    { name: 'B1', value: 100 },\n    { name: 'B2', value: 80 },\n    { name: 'B3', value: 40 },\n    { name: 'B4', value: 30 },\n    { name: 'B5', value: 50 },\n    { name: 'C1', value: 100 },\n    { name: 'C2', value: 200 },\n    { name: 'D1', value: 150 },\n    { name: 'D2', value: 50 },\n  ];\n\n  const StyledTreeExample = () => (\n    <Tree label={<div>Root</div>}>\n      <TreeNode label={<div>Child 1</div>}>\n        <TreeNode label={<div>Grand Child</div>} />\n      </TreeNode>\n    </Tree>\n  );\n  \n  const Resume = () => (\n    <Document>\n    <Page wrap={false}>\n      <View>\n      <Text>This IS the candidate you are looking for</Text>\n        <View>\n          <Image\n            src=\"https://images.pexels.com/photos/8443482/pexels-photo-8443482.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n          />\n        </View>\n        </View>\n      </Page>\n      <Page wrap={false}>\n        <View>\n        <Text>Charts</Text>\n        <View wrap={false}>\n        <PieChart width={400} height={400}>\n            <Pie data={data01} dataKey=\"value\" cx=\"50%\" cy=\"50%\" outerRadius={60} fill=\"#8884d8\" />\n            <Pie data={data02} dataKey=\"value\" cx=\"50%\" cy=\"50%\" innerRadius={70} outerRadius={90} fill=\"#82ca9d\" label />\n          </PieChart>\n        </View>\n          \n        </View>\n        </Page>\n    </Document>\n  );\n  const generate = async () => {\n    var input = document.getElementById('print')\n\t\thtml2canvas(input,{\n      logging:false,\n      background:'#fff',\n      allowTaint: true,\n      taintTest: false,\n      useCORS:true,\n      height: input.scrollHeight + 10,//\n      width: input.scrollWidth,\n      async:false\n    }).then((canvas)=> {\n      \n\t\t\t\n\n      var contentWidth = canvas.width;\n      var contentHeight = canvas.height;\n      console.log('contentWidth', contentWidth);\n      console.log('contentHeight', contentHeight);\n      \n      //One page of pdf displays the height of canvas generated by html page;\n      const pageHeight = contentWidth / 592.28 * 841.89;\n      //Height of html page without pdf generated\n      let leftHeight = contentHeight;\n      //Page offset\n      let position = 0;\n      //The size of a4 paper [595.28,841.89], the width and height of the canvas generated by the html page in the pdf\n      const imgWidth = 595.28;\n      const imgHeight = 592.28 / contentWidth * contentHeight;\n      const pageData = canvas.toDataURL('image/jpeg', 1.0);\n      const pdf = new jsPDF('', 'pt', 'a4');\n\n      if(leftHeight < pageHeight) {\n        pdf.addImage(pageData, 'JPEG', 0, 0, imgWidth,imgHeight);\n    } else {\n        while(leftHeight > 0) {\n            //arg3-->distance left margin; arg4-->distance top margin; arg5-->width; arg6->height\n            pdf.addImage(pageData, 'JPEG', 0, position,imgWidth, imgHeight)\n            leftHeight -= pageHeight;\n            position -= 841.89;\n            //Avoid adding blank pages\n            if(leftHeight > 0) {\n                pdf.addPage();\n            }\n        }\n    }\n    pdf.save('Process form information.pdf');\n\n      });\n  }\n\n\n  // const exportPDFWithMethod = () => {\n  //   let element = container.current || document.body;\n  //   savePDF(element, {\n  //     paperSize: \"auto\",\n  //     margin: 40,\n  //     fileName: `Report for ${new Date().getFullYear()}`,\n  //   });\n  // };\n\n  const exportPDFWithComponent = () => {\n    if (pdfExportComponent.current) {\n      pdfExportComponent.current.save();\n    }\n  };\n\n  const pdfExportComponent = React.useRef(null);\n\n  return (\n    <div className=\"App\">\n    <button onClick={generate}> Generate pdf with jsPDF</button>\n    <button  onClick={exportPDFWithComponent}>Generate pdf with Kendo</button>\n    <PDFExport paperSize={'Letter'}\n    fileName=\"PDf-with-Kendo.pdf\"\n    title=\"\"\n    subject=\"\"\n    keywords=\"\"\n    ref={pdfExportComponent}>\n        <div id=\"print\" style={{width:\"870px\"}}>\n      <StyledTreeExample/>\n        <PieChart width={400} height={400}>\n          <Pie data={data01} dataKey=\"value\" cx=\"50%\" cy=\"50%\" outerRadius={60} fill=\"#8884d8\" />\n          <Pie data={data02} dataKey=\"value\" cx=\"50%\" cy=\"50%\" innerRadius={70} outerRadius={90} fill=\"#82ca9d\" label />\n        </PieChart>\n    <img crossorigin=\"anonymous\" src=\"https://images.pexels.com/photos/8443482/pexels-photo-8443482.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\" alt=\"alternatetext\"/>\n    <StyledTreeExample/>\n        <PieChart width={400} height={400}>\n          <Pie data={data01} dataKey=\"value\" cx=\"50%\" cy=\"50%\" outerRadius={60} fill=\"#8884d8\" />\n          <Pie data={data02} dataKey=\"value\" cx=\"50%\" cy=\"50%\" innerRadius={70} outerRadius={90} fill=\"#82ca9d\" label />\n        </PieChart>\n    <img src=\"https://planworth-profile-pictures.s3.amazonaws.com/default_cover.png\" alt=\"alternatetext\"/>\n\n    </div>\n </PDFExport>\n </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}